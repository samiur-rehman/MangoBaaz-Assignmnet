{"version":3,"sources":["DataFetch.js","App.js","index.js"],"names":["useStyles","makeStyles","root","position","marginTop","maxWidth","minWidth","height","DataFetch","classes","useState","advice","setadvice","setCopied","show","setShow","useEffect","a","axios","get","then","response","data","slip","console","log","catch","alert","FetchData","className","Card","xs","sm","CardContent","Typography","color","gutterBottom","variant","component","CardActions","onClick","ReplayRounded","text","onCopy","Tooltip","title","arrow","placement","Button","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAaMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,WACVC,UAAW,OACXC,SAAU,IACVC,SAAU,IACVC,OAAQ,OAsFGC,MAlFf,WACE,IAAMC,EAAUT,IADG,EAGSU,mBAAS,IAHlB,mBAGZC,EAHY,KAGJC,EAHI,OAISF,oBAAS,GAJlB,mBAIJG,GAJI,aAKKH,oBAAS,GALd,mBAKZI,EALY,KAKNC,EALM,KA0CnB,OAnCAC,qBAAU,YACO,uCAAG,sBAAAC,EAAA,sEACVC,IACHC,IADG,qCAEHC,MAAK,SAACC,GACLT,EAAUS,EAASC,KAAKC,MACxBC,QAAQC,IAAIJ,EAASC,KAAKC,SAE3BG,OAAM,WACLC,MAAM,0BARM,2CAAH,qDAWfC,KACC,IAuBD,qBAAKC,UAAU,YAAf,SACE,eAACC,EAAA,EAAD,CAAMC,GAAI,GAAIC,GAAI,GAAIH,UAAWpB,EAAQP,KAAzC,UACE,eAAC+B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYL,UAAU,QAAQM,MAAM,gBAAgBC,cAAY,EAAhE,SACE,4BAAItB,MAGN,cAACoB,EAAA,EAAD,CAAYG,QAAQ,QAAQC,UAAU,IAAIT,UAAU,SAApD,SACE,kCAAKlB,EAAOA,eAGhB,cAAC4B,EAAA,EAAD,CAAaV,UAAU,gBAAvB,SACE,wBACEA,UAAU,YACVQ,QAAQ,YACRG,QApCU,YACH,uCAAG,sBAAAvB,EAAA,sEACVC,IACHC,IADG,qCAEHC,MAAK,SAACC,GACLT,EAAUS,EAASC,KAAKC,MACxBC,QAAQC,IAAIJ,EAASC,KAAKC,SAE3BG,OAAM,WACLC,MAAM,0BARM,2CAAH,qDAWfC,IAqBM,SAKE,cAACa,EAAA,EAAD,QAIJ,eAACF,EAAA,EAAD,CAAaV,UAAU,UAAvB,UACE,cAAC,kBAAD,CAAiBa,KAAM/B,EAAOA,OAAQgC,OAAQ,kBAAM9B,GAAU,IAA9D,SACE,cAAC+B,EAAA,EAAD,CAASC,MAAM,8BAA8BC,OAAK,EAACC,UAAU,MAA7D,SACE,cAACC,EAAA,EAAD,CAAQX,QAAQ,YAAYF,MAAM,UAAlC,sBAKJ,cAACa,EAAA,EAAD,CAAQX,QAAQ,YAAYF,MAAM,UAAUK,QAlChC,WAClBzB,EAAQJ,EAAOA,SAiCT,4BCpFKsC,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ecc7067.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport \"./DataFetch.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ReplayRounded } from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    marginTop: \"50px\",\r\n    maxWidth: 350,\r\n    minWidth: 350,\r\n    height: 450,\r\n  },\r\n});\r\n\r\nfunction DataFetch() {\r\n  const classes = useStyles();\r\n\r\n  const [advice, setadvice] = useState([]);\r\n  const [copied, setCopied] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const FetchData = async () => {\r\n      await axios\r\n        .get(`https://api.adviceslip.com/advice`)\r\n        .then((response) => {\r\n          setadvice(response.data.slip);\r\n          console.log(response.data.slip);\r\n        })\r\n        .catch(() => {\r\n          alert(\"Invalid call to Api\");\r\n        });\r\n    };\r\n    FetchData();\r\n  }, []);\r\n\r\n  const EventHandle = () => {\r\n    const FetchData = async () => {\r\n      await axios\r\n        .get(`https://api.adviceslip.com/advice`)\r\n        .then((response) => {\r\n          setadvice(response.data.slip);\r\n          console.log(response.data.slip);\r\n        })\r\n        .catch(() => {\r\n          alert(\"Invalid call to Api\");\r\n        });\r\n    };\r\n    FetchData();\r\n  };\r\n\r\n  //tweetcode\r\n  const TweetAdvice = () => {\r\n    setShow(advice.advice);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Card xs={12} sm={12} className={classes.root}>\r\n        <CardContent>\r\n          <Typography className=\"tweet\" color=\"textSecondary\" gutterBottom>\r\n            <p>{show}</p>\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" component=\"p\" className=\"advice\">\r\n            <p> {advice.advice}</p>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className=\"buttonsReplay\">\r\n          <button\r\n            className=\"btnReplay\"\r\n            variant=\"contained\"\r\n            onClick={EventHandle}\r\n          >\r\n            <ReplayRounded />\r\n          </button>\r\n        </CardActions>\r\n\r\n        <CardActions className=\"buttons\">\r\n          <CopyToClipboard text={advice.advice} onCopy={() => setCopied(true)}>\r\n            <Tooltip title=\"Click to Copy for ClipBoard\" arrow placement=\"top\">\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Copy\r\n              </Button>\r\n            </Tooltip>\r\n          </CopyToClipboard>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={TweetAdvice}>\r\n            Tweet\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default DataFetch;\r\n","import React from 'react'\nimport DataFetch from './DataFetch'\n\nfunction App() {\n  return (\n    <>\n    <DataFetch/>\n    </>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}